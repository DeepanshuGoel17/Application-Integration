{
  "name": "projects/xxxx/locations/xxxx/integrations/xxx/versions/xxx",
  "updateTime": "2023-05-17T19:16:06.361Z",
  "lockHolder": "xxxx@google.com",
  "createTime": "2023-05-17T19:12:22.923Z",
  "lastModifierEmail": "xxxx@google.com",
  "triggerConfigs": [{
    "label": "Document Trigger",
    "startTasks": [{
      "taskId": "7"
    }],
    "properties": {
      "IP Project name": "project-name",
      "Subscription name": "subscription-name"
    },
    "triggerType": "CLOUD_PUBSUB_EXTERNAL",
    "triggerNumber": "3",
    "triggerId": "cloud_pubsub_external_trigger/projects/project-name/subscriptions/subscription-name",
    "position": {
      "x": -336
    }
  }],
  "taskConfigs": [{
    "task": "FieldMappingTask",
    "taskId": "4",
    "parameters": {
      "FieldMappingConfigTaskParameterKey": {
        "key": "FieldMappingConfigTaskParameterKey",
        "value": {
          "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"literalValue\": {\n            \"stringValue\": \"application/pdf\"\n          }\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_15_request`.inlineDocument.mimeType$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_3_connectorOutputPayload`$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"ContentBytes\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_15_request`.inlineDocument.content$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
        }
      }
    },
    "nextTasks": [{
      "taskId": "15"
    }],
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Docs AI Payload",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 378
    }
  }, {
    "task": "FieldMappingTask",
    "taskId": "7",
    "parameters": {
      "FieldMappingConfigTaskParameterKey": {
        "key": "FieldMappingConfigTaskParameterKey",
        "value": {
          "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"JSON_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$CloudPubSubMessage$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"attributes\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"objectId\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_3_connectorInputPayload`.Object$\",\n      \"fieldType\": \"JSON_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$CloudPubSubMessage$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"attributes\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"bucketId\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_3_connectorInputPayload`.Bucket$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"JSON_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"literalValue\": {\n            \"booleanValue\": true\n          }\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"booleanFunction\": {\n              \"functionName\": \"TO_JSON\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_3_connectorInputPayload`.HasBytes$\",\n      \"fieldType\": \"JSON_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
        }
      }
    },
    "nextTasks": [{
      "taskId": "3"
    }],
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Parse Message",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 126
    }
  }, {
    "task": "FieldMappingTask",
    "taskId": "13",
    "parameters": {
      "FieldMappingConfigTaskParameterKey": {
        "key": "FieldMappingConfigTaskParameterKey",
        "value": {
          "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"JSON_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$salesforcePayload$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$bqPayload$\",\n      \"fieldType\": \"JSON_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_10_isApproved`$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$status$\",\n      \"fieldType\": \"BOOLEAN_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"BOOLEAN_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$status$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$bqPayload.Status$\",\n      \"fieldType\": \"BOOLEAN_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_3_connectorInputPayload`.Object$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$bqPayload.FileName$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_3_connectorInputPayload`.Bucket$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$bqPayload.FileLocation$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"JSON_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$bqPayload$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_11_connectorInputPayload`$\",\n      \"fieldType\": \"JSON_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
        }
      }
    },
    "nextTasks": [{
      "taskId": "11"
    }],
    "taskExecutionStrategy": "WHEN_ANY_SUCCEED",
    "displayName": "Status Update to BQ",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 1008
    }
  }, {
    "task": "GenericConnectorTask",
    "taskId": "3",
    "parameters": {
      "connectorInputPayload": {
        "key": "connectorInputPayload",
        "value": {
          "stringValue": "$`Task_3_connectorInputPayload`$"
        }
      },
      "config": {
        "key": "config",
        "value": {
          "jsonValue": ""
        }
      },
      "connectorOutputPayload": {
        "key": "connectorOutputPayload",
        "value": {
          "stringValue": "$`Task_3_connectorOutputPayload`$"
        }
      },
      "actionName": {
        "key": "actionName",
        "value": {
          "stringValue": "DownloadObject"
        }
      }
    },
    "nextTasks": [{
      "taskId": "4"
    }],
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Fetch from GCS",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 252
    }
  }, {
    "task": "GenericConnectorTask",
    "taskId": "2",
    "parameters": {
      "entityType": {
        "key": "entityType",
        "value": {
          "stringValue": "Member__c"
        }
      },
      "connectorInputPayload": {
        "key": "connectorInputPayload",
        "value": {
          "stringValue": "$`Task_2_connectorInputPayload`$"
        }
      },
      "config": {
        "key": "config",
        "value": {
          "jsonValue": ""
        }
      },
      "connectorOutputPayload": {
        "key": "connectorOutputPayload",
        "value": {
          "stringValue": "$`Task_2_connectorOutputPayload`$"
        }
      }
    },
    "nextTasks": [{
      "taskId": "13"
    }],
    "taskExecutionStrategy": "WHEN_ANY_SUCCEED",
    "displayName": "Push to Salesforce",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 882
    }
  }, {
    "task": "GenericConnectorTask",
    "taskId": "11",
    "parameters": {
      "entityType": {
        "key": "entityType",
        "value": {
          "stringValue": "claim"
        }
      },
      "connectorInputPayload": {
        "key": "connectorInputPayload",
        "value": {
          "stringValue": "$`Task_11_connectorInputPayload`$"
        }
      },
      "config": {
        "key": "config",
        "value": {
          "jsonValue": ""
        }
      },
      "connectorOutputPayload": {
        "key": "connectorOutputPayload",
        "value": {
          "stringValue": "$`Task_11_connectorOutputPayload`$"
        }
      }
    },
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Push to BQ",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 1134
    }
  }, {
    "task": "Doc AI - Process",
    "taskId": "15",
    "parameters": {
      "projectsId": {
        "key": "projectsId",
        "value": {
          "stringValue": ""
        }
      },
      "request": {
        "key": "request",
        "value": {
          "stringValue": "$`Task_15_request`$"
        }
      },
      "locationsId": {
        "key": "locationsId",
        "value": {
          "stringValue": ""
        }
      },
      "response": {
        "key": "response",
        "value": {
          "stringArray": {
            "stringValues": ["$`Task_15_response`$"]
          }
        }
      },
      "processorsId": {
        "key": "processorsId",
        "value": {
          "stringValue": ""
        }
      },
      "taskTemplateId": {
        "key": "taskTemplateId",
        "value": {
          "stringValue": "83c61f52-6536-4936-8123-1ca1ee236d59"
        }
      }
    },
    "nextTasks": [{
      "taskId": "8"
    }],
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Doc AI - Process (Preview)",
    "taskTemplate": "Doc AI - Process",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 504
    }
  }, {
    "task": "FieldMappingTask",
    "taskId": "8",
    "parameters": {
      "FieldMappingConfigTaskParameterKey": {
        "key": "FieldMappingConfigTaskParameterKey",
        "value": {
          "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_15_response`.document.entities$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"type\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$entityType$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
        }
      }
    },
    "nextTasks": [{
      "taskId": "9",
      "condition": "$entityType$ !\u003d \"member_claim_form\"",
      "displayName": "Not a claim"
    }, {
      "taskId": "1",
      "condition": "$entityType$ \u003d \"member_claim_form\"",
      "displayName": "Is Claim"
    }],
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Fetch Entity from Classifier",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -336,
      "y": 630
    }
  }, {
    "task": "FieldMappingTask",
    "taskId": "1",
    "parameters": {
      "FieldMappingConfigTaskParameterKey": {
        "key": "FieldMappingConfigTaskParameterKey",
        "value": {
          "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_15_response`.document.pages$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"formFields\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Billed to\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"formFields\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Billed to\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"fieldValue\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"textAnchor\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"content\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$BilledTo$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_15_response`.document.pages$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"formFields\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Total\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"formFields\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Total\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"fieldValue\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"textAnchor\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"content\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$Total$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_15_response`.document.pages$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"formFields\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Invoice\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"formFields\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Invoice Number\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"fieldValue\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"textAnchor\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"content\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$InvoiceNumber$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_15_response`.document.pages$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"formFields\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Date of Issue\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"formFields\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Date of Issue\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"fieldValue\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"textAnchor\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"content\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$DateOfIssue$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_15_response`.document.pages$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"formFields\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Due Date\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"formFields\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"FILTER_ELEMENTS\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"protoValue\": {\n                  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.TransformExpression\",\n                  \"initialValue\": {\n                    \"referenceValue\": \"~x\"\n                  },\n                  \"transformationFunctions\": [{\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"fieldName\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"textAnchor\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"GET_PROPERTY\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"content\"\n                        }\n                      }\n                    }]\n                  }, {\n                    \"functionType\": {\n                      \"jsonFunction\": {\n                        \"functionName\": \"TO_STRING\"\n                      }\n                    }\n                  }, {\n                    \"functionType\": {\n                      \"stringFunction\": {\n                        \"functionName\": \"CONTAINS\"\n                      }\n                    },\n                    \"parameters\": [{\n                      \"initialValue\": {\n                        \"literalValue\": {\n                          \"stringValue\": \"Due Date\"\n                        }\n                      }\n                    }]\n                  }]\n                }\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_ELEMENT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"fieldValue\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"textAnchor\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"content\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"TO_STRING\"\n            }\n          }\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$DateDue$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$InvoiceNumber$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.InvoiceNumber__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$DateOfIssue$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.IssuedDate__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$DateDue$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.DueDate__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$BilledTo$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.Name$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$BilledTo$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"1\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.Address__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$BilledTo$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"2\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.City__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$BilledTo$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"3\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \" \"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"0\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.State__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$BilledTo$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"\\n\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"3\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SPLIT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \" \"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringArrayFunction\": {\n              \"functionName\": \"GET\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"1\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.PostalCode__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$Total$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$salesforcePayload.Total__c$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"JSON_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$salesforcePayload$\"\n        }\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$`Task_2_connectorInputPayload`$\",\n      \"fieldType\": \"JSON_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"DOUBLE_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$Total$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"SUBSTRING\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"intValue\": \"1\"\n              }\n            }\n          }, {\n            \"initialValue\": {\n              \"referenceValue\": \"$Total$\"\n            },\n            \"transformationFunctions\": [{\n              \"functionType\": {\n                \"stringFunction\": {\n                  \"functionName\": \"LENGTH\"\n                }\n              }\n            }]\n          }]\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"TO_DOUBLE\"\n            }\n          }\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$TotalDb$\",\n      \"fieldType\": \"DOUBLE_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
        }
      }
    },
    "nextTasks": [{
      "taskId": "2"
    }],
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Generate Payload",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -462,
      "y": 756
    }
  }, {
    "task": "EmailTask",
    "taskId": "9",
    "parameters": {
      "Cc": {
        "key": "Cc",
        "value": {
          "stringArray": {
          }
        }
      },
      "TextBody": {
        "key": "TextBody",
        "value": {
          "stringValue": "Not a claim"
        }
      },
      "Bcc": {
        "key": "Bcc",
        "value": {
          "stringArray": {
          }
        }
      },
      "AttachmentPath": {
        "key": "AttachmentPath",
        "value": {
          "stringArray": {
          }
        }
      },
      "To": {
        "key": "To",
        "value": {
          "stringArray": {
            "stringValues": ["xxx@google.com"]
          }
        }
      },
      "BodyFormat": {
        "key": "BodyFormat",
        "value": {
          "stringValue": "text"
        }
      },
      "EmailConfigInput": {
        "key": "EmailConfigInput",
        "value": {
          "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.EmailConfig\"\n}"
        }
      },
      "Subject": {
        "key": "Subject",
        "value": {
          "stringValue": "Not a claim"
        }
      }
    },
    "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
    "displayName": "Send Email",
    "externalTaskType": "NORMAL_TASK",
    "position": {
      "x": -210,
      "y": 756
    }
  }],
  "integrationParameters": [{
    "key": "InvoiceNumber",
    "dataType": "STRING_VALUE",
    "searchable": true,
    "displayName": "InvoiceNumber"
  }, {
    "key": "DateOfIssue",
    "dataType": "STRING_VALUE",
    "defaultValue": {
      "stringValue": ""
    },
    "displayName": "DateOfIssue"
  }, {
    "key": "DateDue",
    "dataType": "STRING_VALUE",
    "defaultValue": {
      "stringValue": ""
    },
    "displayName": "DateDue"
  }, {
    "key": "Total",
    "dataType": "STRING_VALUE",
    "defaultValue": {
      "stringValue": ""
    },
    "displayName": "Total"
  }, {
    "key": "BilledTo",
    "dataType": "STRING_VALUE",
    "defaultValue": {
      "stringValue": ""
    },
    "displayName": "BilledTo"
  }, {
    "key": "`Task_2_connectorInputPayload`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_2_connectorInputPayload`",
    "producer": "1_2",
    "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Id\": {\n      \"type\": \"string\",\n      \"readOnly\": false,\n      \"description\": \"Label Record ID corresponds to this field.\"\n    },\n    \"OwnerId\": {\n      \"type\": \"string\",\n      \"readOnly\": false,\n      \"description\": \"Label Owner ID corresponds to this field.\"\n    },\n    \"IsDeleted\": {\n      \"type\": \"boolean\",\n      \"readOnly\": false,\n      \"description\": \"Label Deleted corresponds to this field.\"\n    },\n    \"Name\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Member Name corresponds to this field.\"\n    },\n    \"CreatedDate\": {\n      \"type\": \"string\",\n      \"readOnly\": false,\n      \"description\": \"Label Created Date corresponds to this field.\"\n    },\n    \"CreatedById\": {\n      \"type\": \"string\",\n      \"readOnly\": false,\n      \"description\": \"Label Created By ID corresponds to this field.\"\n    },\n    \"LastModifiedDate\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Last Modified Date corresponds to this field.\"\n    },\n    \"LastModifiedById\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Last Modified By ID corresponds to this field.\"\n    },\n    \"SystemModstamp\": {\n      \"type\": \"string\",\n      \"readOnly\": false,\n      \"description\": \"Label System Modstamp corresponds to this field.\"\n    },\n    \"LastViewedDate\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Last Viewed Date corresponds to this field.\"\n    },\n    \"LastReferencedDate\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Last Referenced Date corresponds to this field.\"\n    },\n    \"InvoiceNumber__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label InvoiceNumber corresponds to this field.\"\n    },\n    \"Total__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Total corresponds to this field.\"\n    },\n    \"Address__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label Address corresponds to this field.\"\n    },\n    \"City__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label City corresponds to this field.\"\n    },\n    \"State__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label State corresponds to this field.\"\n    },\n    \"PostalCode__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label PostalCode corresponds to this field.\"\n    },\n    \"IssuedDate__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label IssuedDate corresponds to this field.\"\n    },\n    \"DueDate__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Label DueDate corresponds to this field.\"\n    }\n  }\n}"
  }, {
    "key": "`Task_2_connectorOutputPayload`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_2_connectorOutputPayload`",
    "isTransient": true,
    "producer": "1_2"
  }, {
    "key": "outputPayload",
    "dataType": "JSON_VALUE",
    "searchable": true,
    "displayName": "outputPayload",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"DateOfIssue\": {\n      \"type\": \"string\"\n    },\n    \"Total\": {\n      \"type\": \"string\"\n    },\n    \"MemberAddress\": {\n      \"type\": \"string\"\n    },\n    \"MemberCity\": {\n      \"type\": \"string\"\n    },\n    \"MemberState\": {\n      \"type\": \"string\"\n    },\n    \"MemberPostalCode\": {\n      \"type\": \"string\"\n    },\n    \"InvoiceNumber\": {\n      \"type\": \"string\"\n    },\n    \"MemberName\": {\n      \"type\": \"string\"\n    },\n    \"DueDate\": {\n      \"type\": \"string\"\n    },\n    \"BilledTo\": {\n      \"type\": \"string\"\n    }\n  }\n}"
  }, {
    "key": "salesforcePayload",
    "dataType": "JSON_VALUE",
    "displayName": "salesforcePayload",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"IssuedDate__c\": {\n      \"type\": \"string\"\n    },\n    \"Total__c\": {\n      \"type\": \"string\"\n    },\n    \"Address__c\": {\n      \"type\": \"string\"\n    },\n    \"City__c\": {\n      \"type\": \"string\"\n    },\n    \"State__c\": {\n      \"type\": \"string\"\n    },\n    \"PostalCode__c\": {\n      \"type\": \"string\"\n    },\n    \"InvoiceNumber__c\": {\n      \"type\": \"string\"\n    },\n    \"Name\": {\n      \"type\": \"string\"\n    },\n    \"DueDate__c\": {\n      \"type\": \"string\"\n    }\n  }\n}"
  }, {
    "key": "docsAIPayload",
    "dataType": "JSON_VALUE",
    "displayName": "docsAIPayload",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inlineDocument\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"mimeType\": {\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
  }, {
    "key": "docsAIAPIURL",
    "dataType": "STRING_VALUE",
    "defaultValue": {
      "stringValue": "https://us-documentai.googleapis.com/v1beta3/projects/gcptraining-350417/locations/us/processors/b53886d682c6f327:process"
    },
    "displayName": "docsAIAPIURL"
  }, {
    "key": "docsAIClassiferURL",
    "dataType": "STRING_VALUE",
    "defaultValue": {
      "stringValue": "https://us-documentai.googleapis.com/v1beta3/projects/gcptraining-350417/locations/us/processors/ab8c1194bb601967:process"
    },
    "displayName": "docsAIClassiferURL"
  }, {
    "key": "CloudPubSubMessage",
    "dataType": "JSON_VALUE",
    "displayName": "CloudPubSubMessage",
    "isTransient": true,
    "producer": "2_2",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"title\": \"Cloud Pub/Sub Message\",\n  \"description\": \"Message received by Cloud Pub/Sub.\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"string\",\n      \"description\": \"The message data sent by the publisher\"\n    },\n    \"attributes\": {\n      \"type\": \"object\",\n      \"description\": \"Attributes for this message\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"ID of this message, assigned by the server when the message is published. Guaranteed to be unique within the topic.\"\n    },\n    \"publishTime\": {\n      \"type\": \"string\",\n      \"description\": \"The time at which the message was published, populated by the server when it receives the topics.publish call\"\n    },\n    \"orderingKey\": {\n      \"type\": \"string\",\n      \"description\": \"Identifies related messages for which publish order should be respected.\"\n    }\n  }\n}"
  }, {
    "key": "entityType",
    "dataType": "STRING_VALUE",
    "displayName": "entityType"
  }, {
    "key": "TotalDb",
    "dataType": "DOUBLE_VALUE",
    "displayName": "TotalDb"
  }, {
    "key": "status",
    "dataType": "BOOLEAN_VALUE",
    "defaultValue": {
      "booleanValue": true
    },
    "displayName": "status"
  }, {
    "key": "bqPayload",
    "dataType": "JSON_VALUE",
    "searchable": true,
    "displayName": "bqPayload",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"IssuedDate__c\": {\n      \"type\": \"string\"\n    },\n    \"Total__c\": {\n      \"type\": \"string\"\n    },\n    \"Address__c\": {\n      \"type\": \"string\"\n    },\n    \"City__c\": {\n      \"type\": \"string\"\n    },\n    \"State__c\": {\n      \"type\": \"string\"\n    },\n    \"PostalCode__c\": {\n      \"type\": \"string\"\n    },\n    \"InvoiceNumber__c\": {\n      \"type\": \"string\"\n    },\n    \"Name\": {\n      \"type\": \"string\"\n    },\n    \"DueDate__c\": {\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"type\": \"boolean\"\n    },\n    \"FileName\": {\n      \"type\": \"string\"\n    },\n    \"FileLocation\": {\n      \"type\": \"string\"\n    }\n  }\n}"
  }, {
    "key": "`Task_11_connectorInputPayload`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_11_connectorInputPayload`",
    "producer": "1_11",
    "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Name\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"InvoiceNumber__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"IssuedDate__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"DueDate__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"Address__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"City__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"State__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"PostalCode__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"Total__c\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"Status\": {\n      \"type\": [\"boolean\", \"null\"],\n      \"readOnly\": false\n    },\n    \"FileName\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    },\n    \"FileLocation\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false\n    }\n  }\n}"
  }, {
    "key": "`Task_11_connectorOutputPayload`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_11_connectorOutputPayload`",
    "isTransient": true,
    "producer": "1_11"
  }, {
    "key": "`Task_3_connectorOutputPayload`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_3_connectorOutputPayload`",
    "isTransient": true,
    "producer": "1_3",
    "jsonSchema": "{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\"\n  }\n}"
  }, {
    "key": "`Task_3_connectorInputPayload`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_3_connectorInputPayload`",
    "inputOutputType": "IN",
    "producer": "1_3",
    "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Bucket\": {\n      \"type\": \"string\",\n      \"readOnly\": false,\n      \"description\": \"Bucket name where the object is located.\"\n    },\n    \"Object\": {\n      \"type\": [\"string\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Object name for the object that should be retrieved. If not specified, all the objects from the specified bucket will be retrieved.\"\n    },\n    \"HasBytes\": {\n      \"type\": [\"boolean\", \"null\"],\n      \"readOnly\": false,\n      \"description\": \"Whether to download content as bytes.\",\n      \"default\": false\n    }\n  }\n}"
  }, {
    "key": "`Task_15_request`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_15_request`",
    "isTransient": true,
    "producer": "1_15",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inlineDocument\": {\n      \"description\": \"Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"revisions\": {\n          \"type\": \"array\",\n          \"description\": \"Placeholder. Revision history of this document.\",\n          \"items\": {\n            \"properties\": {\n              \"humanReview\": {\n                \"properties\": {\n                  \"state\": {\n                    \"description\": \"Human review state. e.g. `requested`, `succeeded`, `rejected`.\",\n                    \"type\": \"string\"\n                  },\n                  \"stateMessage\": {\n                    \"description\": \"A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"description\": \"Human Review information of the document.\",\n                \"type\": \"object\"\n              },\n              \"id\": {\n                \"description\": \"Id of the revision, internally generated by doc proto storage. Unique within the context of the document.\",\n                \"type\": \"string\"\n              },\n              \"processor\": {\n                \"description\": \"If the annotation was made by processor identify the processor by its resource name.\",\n                \"type\": \"string\"\n              },\n              \"parent\": {\n                \"type\": \"array\",\n                \"description\": \"The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"createTime\": {\n                \"type\": \"string\",\n                \"description\": \"The time that the revision was created, internally generated by doc proto storage at the time of create.\",\n                \"format\": \"google-datetime\"\n              },\n              \"agent\": {\n                \"type\": \"string\",\n                \"description\": \"If the change was made by a person specify the name or id of that person.\"\n              },\n              \"parentIds\": {\n                \"description\": \"The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            },\n            \"type\": \"object\",\n            \"description\": \"Contains past or forward revisions of this document.\"\n          }\n        },\n        \"shardInfo\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"textOffset\": {\n              \"format\": \"int64\",\n              \"type\": \"string\",\n              \"description\": \"The index of the first character in Document.text in the overall document global text.\"\n            },\n            \"shardIndex\": {\n              \"description\": \"The 0-based index of this shard.\",\n              \"format\": \"int64\",\n              \"type\": \"string\"\n            },\n            \"shardCount\": {\n              \"description\": \"Total number of shards.\",\n              \"type\": \"string\",\n              \"format\": \"int64\"\n            }\n          },\n          \"description\": \"For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.\"\n        },\n        \"entities\": {\n          \"description\": \"A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.\",\n          \"type\": \"array\",\n          \"items\": {\n            \"properties\": {\n              \"normalizedValue\": {\n                \"properties\": {\n                  \"addressValue\": {\n                  },\n                  \"text\": {\n                  },\n                  \"datetimeValue\": {\n                  },\n                  \"moneyValue\": {\n                  },\n                  \"floatValue\": {\n                  },\n                  \"booleanValue\": {\n                  },\n                  \"dateValue\": {\n                  },\n                  \"integerValue\": {\n                  }\n                },\n                \"description\": \"Parsed and normalized entity value.\",\n                \"type\": \"object\"\n              },\n              \"redacted\": {\n                \"type\": \"boolean\",\n                \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n              },\n              \"properties\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"properties\": {\n                    \"normalizedValue\": {\n                      \"properties\": {\n                        \"addressValue\": {\n                        },\n                        \"text\": {\n                        },\n                        \"datetimeValue\": {\n                        },\n                        \"moneyValue\": {\n                        },\n                        \"floatValue\": {\n                        },\n                        \"booleanValue\": {\n                        },\n                        \"dateValue\": {\n                        },\n                        \"integerValue\": {\n                        }\n                      },\n                      \"description\": \"Parsed and normalized entity value.\",\n                      \"type\": \"object\"\n                    },\n                    \"redacted\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                    },\n                    \"properties\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"properties\": {\n                          \"normalizedValue\": {\n                            \"properties\": {\n                              \"addressValue\": {\n                              },\n                              \"text\": {\n                              },\n                              \"datetimeValue\": {\n                              },\n                              \"moneyValue\": {\n                              },\n                              \"floatValue\": {\n                              },\n                              \"booleanValue\": {\n                              },\n                              \"dateValue\": {\n                              },\n                              \"integerValue\": {\n                              }\n                            },\n                            \"description\": \"Parsed and normalized entity value.\",\n                            \"type\": \"object\"\n                          },\n                          \"redacted\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                          },\n                          \"properties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"properties\": {\n                                \"normalizedValue\": {\n                                  \"properties\": {\n                                    \"addressValue\": {\n                                    },\n                                    \"text\": {\n                                    },\n                                    \"datetimeValue\": {\n                                    },\n                                    \"moneyValue\": {\n                                    },\n                                    \"floatValue\": {\n                                    },\n                                    \"booleanValue\": {\n                                    },\n                                    \"dateValue\": {\n                                    },\n                                    \"integerValue\": {\n                                    }\n                                  },\n                                  \"description\": \"Parsed and normalized entity value.\",\n                                  \"type\": \"object\"\n                                },\n                                \"redacted\": {\n                                  \"type\": \"boolean\",\n                                  \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                                },\n                                \"properties\": {\n                                  \"type\": \"array\",\n                                  \"items\": {\n                                    \"properties\": {\n                                      \"normalizedValue\": {\n                                        \"properties\": {\n                                          \"addressValue\": {\n                                          },\n                                          \"text\": {\n                                          },\n                                          \"datetimeValue\": {\n                                          },\n                                          \"moneyValue\": {\n                                          },\n                                          \"floatValue\": {\n                                          },\n                                          \"booleanValue\": {\n                                          },\n                                          \"dateValue\": {\n                                          },\n                                          \"integerValue\": {\n                                          }\n                                        },\n                                        \"description\": \"Parsed and normalized entity value.\",\n                                        \"type\": \"object\"\n                                      },\n                                      \"redacted\": {\n                                        \"type\": \"boolean\",\n                                        \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                                      },\n                                      \"properties\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                          \"properties\": {\n                                          },\n                                          \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                                          \"type\": \"object\"\n                                        },\n                                        \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                                      },\n                                      \"textAnchor\": {\n                                        \"description\": \"Text reference indexing into the Document.text.\",\n                                        \"properties\": {\n                                          \"content\": {\n                                          },\n                                          \"textSegments\": {\n                                          }\n                                        },\n                                        \"type\": \"object\"\n                                      },\n                                      \"type\": {\n                                        \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                                        \"type\": \"string\"\n                                      },\n                                      \"provenance\": {\n                                        \"properties\": {\n                                          \"id\": {\n                                            \"format\": \"int32\",\n                                            \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                                            \"type\": \"integer\"\n                                          },\n                                          \"revision\": {\n                                          },\n                                          \"type\": {\n                                          },\n                                          \"parents\": {\n                                          }\n                                        },\n                                        \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                                        \"type\": \"object\"\n                                      },\n                                      \"pageAnchor\": {\n                                        \"properties\": {\n                                          \"pageRefs\": {\n                                          }\n                                        },\n                                        \"type\": \"object\",\n                                        \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                                      },\n                                      \"mentionText\": {\n                                        \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                                        \"type\": \"string\"\n                                      },\n                                      \"id\": {\n                                        \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                                        \"type\": \"string\"\n                                      },\n                                      \"mentionId\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                                      },\n                                      \"confidence\": {\n                                        \"type\": \"number\",\n                                        \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                                        \"format\": \"float\"\n                                      }\n                                    },\n                                    \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                                    \"type\": \"object\"\n                                  },\n                                  \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                                },\n                                \"textAnchor\": {\n                                  \"description\": \"Text reference indexing into the Document.text.\",\n                                  \"properties\": {\n                                    \"content\": {\n                                    },\n                                    \"textSegments\": {\n                                    }\n                                  },\n                                  \"type\": \"object\"\n                                },\n                                \"type\": {\n                                  \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                                  \"type\": \"string\"\n                                },\n                                \"provenance\": {\n                                  \"properties\": {\n                                    \"id\": {\n                                      \"format\": \"int32\",\n                                      \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                                      \"type\": \"integer\"\n                                    },\n                                    \"revision\": {\n                                    },\n                                    \"type\": {\n                                    },\n                                    \"parents\": {\n                                    }\n                                  },\n                                  \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                                  \"type\": \"object\"\n                                },\n                                \"pageAnchor\": {\n                                  \"properties\": {\n                                    \"pageRefs\": {\n                                    }\n                                  },\n                                  \"type\": \"object\",\n                                  \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                                },\n                                \"mentionText\": {\n                                  \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                                  \"type\": \"string\"\n                                },\n                                \"id\": {\n                                  \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                                  \"type\": \"string\"\n                                },\n                                \"mentionId\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                                },\n                                \"confidence\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                                  \"format\": \"float\"\n                                }\n                              },\n                              \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                              \"type\": \"object\"\n                            },\n                            \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                          },\n                          \"textAnchor\": {\n                            \"description\": \"Text reference indexing into the Document.text.\",\n                            \"properties\": {\n                              \"content\": {\n                              },\n                              \"textSegments\": {\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": {\n                            \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                            \"type\": \"string\"\n                          },\n                          \"provenance\": {\n                            \"properties\": {\n                              \"id\": {\n                                \"format\": \"int32\",\n                                \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                                \"type\": \"integer\"\n                              },\n                              \"revision\": {\n                              },\n                              \"type\": {\n                              },\n                              \"parents\": {\n                              }\n                            },\n                            \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                            \"type\": \"object\"\n                          },\n                          \"pageAnchor\": {\n                            \"properties\": {\n                              \"pageRefs\": {\n                              }\n                            },\n                            \"type\": \"object\",\n                            \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                          },\n                          \"mentionText\": {\n                            \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                            \"type\": \"string\"\n                          },\n                          \"id\": {\n                            \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                            \"type\": \"string\"\n                          },\n                          \"mentionId\": {\n                            \"type\": \"string\",\n                            \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                          },\n                          \"confidence\": {\n                            \"type\": \"number\",\n                            \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                            \"format\": \"float\"\n                          }\n                        },\n                        \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                        \"type\": \"object\"\n                      },\n                      \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                    },\n                    \"textAnchor\": {\n                      \"description\": \"Text reference indexing into the Document.text.\",\n                      \"properties\": {\n                        \"content\": {\n                        },\n                        \"textSegments\": {\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": {\n                      \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                      \"type\": \"string\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"pageAnchor\": {\n                      \"properties\": {\n                        \"pageRefs\": {\n                        }\n                      },\n                      \"type\": \"object\",\n                      \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                    },\n                    \"mentionText\": {\n                      \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                      \"type\": \"string\"\n                    },\n                    \"mentionId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                    },\n                    \"confidence\": {\n                      \"type\": \"number\",\n                      \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                      \"format\": \"float\"\n                    }\n                  },\n                  \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                  \"type\": \"object\"\n                },\n                \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n              },\n              \"textAnchor\": {\n                \"description\": \"Text reference indexing into the Document.text.\",\n                \"properties\": {\n                  \"content\": {\n                  },\n                  \"textSegments\": {\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"type\": {\n                \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                \"type\": \"string\"\n              },\n              \"provenance\": {\n                \"properties\": {\n                  \"id\": {\n                    \"format\": \"int32\",\n                    \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                    \"type\": \"integer\"\n                  },\n                  \"revision\": {\n                  },\n                  \"type\": {\n                  },\n                  \"parents\": {\n                  }\n                },\n                \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                \"type\": \"object\"\n              },\n              \"pageAnchor\": {\n                \"properties\": {\n                  \"pageRefs\": {\n                  }\n                },\n                \"type\": \"object\",\n                \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n              },\n              \"mentionText\": {\n                \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                \"type\": \"string\"\n              },\n              \"mentionId\": {\n                \"type\": \"string\",\n                \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n              },\n              \"confidence\": {\n                \"type\": \"number\",\n                \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                \"format\": \"float\"\n              }\n            },\n            \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n            \"type\": \"object\"\n          }\n        },\n        \"mimeType\": {\n          \"description\": \"An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.\",\n          \"type\": \"string\"\n        },\n        \"entityRelations\": {\n          \"type\": \"array\",\n          \"description\": \"Placeholder. Relationship among Document.entities.\",\n          \"items\": {\n            \"description\": \"Relationship between Entities.\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"relation\": {\n                \"description\": \"Relationship description.\",\n                \"type\": \"string\"\n              },\n              \"subjectId\": {\n                \"description\": \"Subject entity id.\",\n                \"type\": \"string\"\n              },\n              \"objectId\": {\n                \"description\": \"Object entity id.\",\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"content\": {\n          \"description\": \"Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.\",\n          \"format\": \"byte\",\n          \"type\": \"string\"\n        },\n        \"error\": {\n          \"type\": \"object\",\n          \"description\": \"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).\",\n          \"properties\": {\n            \"message\": {\n              \"description\": \"A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.\",\n              \"type\": \"string\"\n            },\n            \"code\": {\n              \"type\": \"integer\",\n              \"description\": \"The status code, which should be an enum value of google.rpc.Code.\",\n              \"format\": \"int32\"\n            },\n            \"details\": {\n              \"items\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"any\",\n                  \"description\": \"Properties of the object. Contains field @type with type URL.\"\n                }\n              },\n              \"type\": \"array\",\n              \"description\": \"A list of messages that carry the error details. There is a common set of message types for APIs to use.\"\n            }\n          }\n        },\n        \"text\": {\n          \"type\": \"string\",\n          \"description\": \"Optional. UTF-8 encoded text in reading order from the document.\"\n        },\n        \"uri\": {\n          \"description\": \"Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.\",\n          \"type\": \"string\"\n        },\n        \"textChanges\": {\n          \"items\": {\n            \"properties\": {\n              \"changedText\": {\n                \"type\": \"string\",\n                \"description\": \"The text that replaces the text identified in the `text_anchor`.\"\n              },\n              \"provenance\": {\n                \"items\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"format\": \"int32\",\n                      \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                      \"type\": \"integer\"\n                    },\n                    \"revision\": {\n                    },\n                    \"type\": {\n                    },\n                    \"parents\": {\n                    }\n                  },\n                  \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                  \"type\": \"object\"\n                },\n                \"type\": \"array\",\n                \"description\": \"The history of this annotation.\"\n              },\n              \"textAnchor\": {\n                \"description\": \"Text reference indexing into the Document.text.\",\n                \"properties\": {\n                  \"content\": {\n                  },\n                  \"textSegments\": {\n                  }\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"type\": \"object\",\n            \"description\": \"This message is used for text changes aka. OCR corrections.\"\n          },\n          \"description\": \"Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.\",\n          \"type\": \"array\"\n        },\n        \"pages\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"description\": \"A page in a Document.\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"detectedBarcodes\": {\n                \"items\": {\n                  \"properties\": {\n                    \"barcode\": {\n                      \"properties\": {\n                        \"format\": {\n                          \"type\": \"string\",\n                          \"description\": \"Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.\"\n                        },\n                        \"rawValue\": {\n                          \"type\": \"string\",\n                          \"description\": \"Raw value encoded in the barcode. For example: `\\u0027MEBKM:TITLE:Google;URL:https://www.google.com;;\\u0027`.\"\n                        },\n                        \"valueFormat\": {\n                          \"description\": \"Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver\\u0027s license.\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"description\": \"Encodes the detailed information of a barcode.\",\n                      \"type\": \"object\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                                \"properties\": {\n                                  \"y\": {\n                                    \"format\": \"float\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\",\n                                    \"type\": \"number\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"number\",\n                                    \"format\": \"float\",\n                                    \"description\": \"X coordinate.\"\n                                  }\n                                },\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.\",\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.\",\n                                \"properties\": {\n                                  \"y\": {\n                                    \"type\": \"integer\",\n                                    \"format\": \"int32\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"X coordinate.\",\n                                    \"format\": \"int32\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"description\": \"A detected barcode.\"\n                },\n                \"type\": \"array\",\n                \"description\": \"A list of detected barcodes.\"\n              },\n              \"visualElements\": {\n                \"description\": \"A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"description\": \"Detected non-text visual elements e.g. checkbox, signature etc. on the page.\",\n                  \"properties\": {\n                    \"detectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"Type of the VisualElement.\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                                \"properties\": {\n                                  \"y\": {\n                                    \"format\": \"float\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\",\n                                    \"type\": \"number\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"number\",\n                                    \"format\": \"float\",\n                                    \"description\": \"X coordinate.\"\n                                  }\n                                },\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.\",\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.\",\n                                \"properties\": {\n                                  \"y\": {\n                                    \"type\": \"integer\",\n                                    \"format\": \"int32\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"X coordinate.\",\n                                    \"format\": \"int32\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              },\n              \"imageQualityScores\": {\n                \"description\": \"Image Quality Scores for the page image\",\n                \"properties\": {\n                  \"qualityScore\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The overall quality score. Range `[0, 1]` where 1 is perfect quality.\"\n                  },\n                  \"detectedDefects\": {\n                    \"items\": {\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"description\": \"Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists.\"\n                        }\n                      },\n                      \"type\": \"object\",\n                      \"description\": \"Image Quality Defects\"\n                    },\n                    \"description\": \"A list of detected defects.\",\n                    \"type\": \"array\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"pageNumber\": {\n                \"format\": \"int32\",\n                \"description\": \"1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.\",\n                \"type\": \"integer\"\n              },\n              \"layout\": {\n                \"properties\": {\n                  \"orientation\": {\n                    \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                    \"description\": \"Detected orientation for the Layout.\",\n                    \"type\": \"string\",\n                    \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                  },\n                  \"boundingPoly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"normalizedVertices\": {\n                        \"items\": {\n                          \"properties\": {\n                            \"y\": {\n                              \"format\": \"float\",\n                              \"description\": \"Y coordinate (starts from the top of the image).\",\n                              \"type\": \"number\"\n                            },\n                            \"x\": {\n                              \"type\": \"number\",\n                              \"format\": \"float\",\n                              \"description\": \"X coordinate.\"\n                            }\n                          },\n                          \"description\": \"A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.\",\n                          \"type\": \"object\"\n                        },\n                        \"description\": \"The bounding polygon normalized vertices.\",\n                        \"type\": \"array\"\n                      },\n                      \"vertices\": {\n                        \"items\": {\n                          \"description\": \"A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.\",\n                          \"properties\": {\n                            \"y\": {\n                              \"type\": \"integer\",\n                              \"format\": \"int32\",\n                              \"description\": \"Y coordinate (starts from the top of the image).\"\n                            },\n                            \"x\": {\n                              \"type\": \"integer\",\n                              \"description\": \"X coordinate.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"description\": \"The bounding polygon vertices.\",\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"description\": \"A bounding polygon for the detected image annotation.\"\n                  },\n                  \"textAnchor\": {\n                    \"description\": \"Text reference indexing into the Document.text.\",\n                    \"properties\": {\n                      \"content\": {\n                      },\n                      \"textSegments\": {\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"confidence\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                  }\n                },\n                \"description\": \"Visual element describing a layout unit on a page.\",\n                \"type\": \"object\"\n              },\n              \"symbols\": {\n                \"items\": {\n                  \"properties\": {\n                    \"detectedLanguages\": {\n                      \"description\": \"A list of detected languages together with confidence.\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"description\": \"A detected symbol.\"\n                },\n                \"description\": \"A list of visually detected symbols on the page.\",\n                \"type\": \"array\"\n              },\n              \"tokens\": {\n                \"description\": \"A list of visually detected tokens on the page.\",\n                \"items\": {\n                  \"description\": \"A detected token.\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detectedBreak\": {\n                      \"description\": \"Detected break at the end of a Token.\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\"TYPE_UNSPECIFIED\", \"SPACE\", \"WIDE_SPACE\", \"HYPHEN\"],\n                          \"description\": \"Detected break type.\",\n                          \"enumDescriptions\": [\"Unspecified break type.\", \"A single whitespace.\", \"A wider whitespace.\", \"A hyphen that indicates that a token has been split across lines.\"]\n                        }\n                      }\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  }\n                },\n                \"type\": \"array\"\n              },\n              \"detectedLanguages\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"description\": \"Detected language for a structural component.\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"confidence\": {\n                      \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                      \"format\": \"float\",\n                      \"type\": \"number\"\n                    },\n                    \"languageCode\": {\n                      \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"description\": \"A list of detected languages together with confidence.\"\n              },\n              \"blocks\": {\n                \"items\": {\n                  \"properties\": {\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"description\": \"A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.\",\n                  \"type\": \"object\"\n                },\n                \"description\": \"A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.\",\n                \"type\": \"array\"\n              },\n              \"paragraphs\": {\n                \"description\": \"A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"description\": \"A collection of lines that a human would perceive as a paragraph.\",\n                  \"properties\": {\n                    \"detectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              },\n              \"transforms\": {\n                \"type\": \"array\",\n                \"description\": \"Transformation matrices that were applied to the original document image to produce Page.image.\",\n                \"items\": {\n                  \"description\": \"Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"string\",\n                      \"format\": \"byte\",\n                      \"description\": \"The matrix data.\"\n                    },\n                    \"type\": {\n                      \"description\": \"This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html\",\n                      \"format\": \"int32\",\n                      \"type\": \"integer\"\n                    },\n                    \"rows\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Number of rows in the matrix.\",\n                      \"format\": \"int32\"\n                    },\n                    \"cols\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\",\n                      \"description\": \"Number of columns in the matrix.\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              },\n              \"dimension\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"unit\": {\n                    \"description\": \"Dimension unit.\",\n                    \"type\": \"string\"\n                  },\n                  \"height\": {\n                    \"description\": \"Page height.\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"width\": {\n                    \"description\": \"Page width.\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  }\n                },\n                \"description\": \"Dimension for the page.\"\n              },\n              \"provenance\": {\n                \"properties\": {\n                  \"id\": {\n                    \"format\": \"int32\",\n                    \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                    \"type\": \"integer\"\n                  },\n                  \"revision\": {\n                  },\n                  \"type\": {\n                  },\n                  \"parents\": {\n                  }\n                },\n                \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                \"type\": \"object\"\n              },\n              \"image\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"content\": {\n                    \"description\": \"Raw byte content of the image.\",\n                    \"format\": \"byte\",\n                    \"type\": \"string\"\n                  },\n                  \"mimeType\": {\n                    \"type\": \"string\",\n                    \"description\": \"Encoding mime type for the image.\"\n                  },\n                  \"width\": {\n                    \"description\": \"Width of the image in pixels.\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                  },\n                  \"height\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Height of the image in pixels.\",\n                    \"format\": \"int32\"\n                  }\n                },\n                \"description\": \"Rendered image contents for this page.\"\n              },\n              \"tables\": {\n                \"description\": \"A list of visually detected tables on the page.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"description\": \"A table representation similar to HTML table structure.\",\n                  \"properties\": {\n                    \"headerRows\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"description\": \"A row of table cells.\",\n                        \"properties\": {\n                          \"cells\": {\n                            \"items\": {\n                              \"description\": \"A cell representation inside the table.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"detectedLanguages\": {\n                                  \"items\": {\n                                    \"description\": \"Detected language for a structural component.\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"confidence\": {\n                                        \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                                        \"format\": \"float\",\n                                        \"type\": \"number\"\n                                      },\n                                      \"languageCode\": {\n                                        \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  },\n                                  \"description\": \"A list of detected languages together with confidence.\",\n                                  \"type\": \"array\"\n                                },\n                                \"rowSpan\": {\n                                  \"description\": \"How many rows this cell spans.\",\n                                  \"type\": \"integer\",\n                                  \"format\": \"int32\"\n                                },\n                                \"colSpan\": {\n                                  \"type\": \"integer\",\n                                  \"description\": \"How many columns this cell spans.\",\n                                  \"format\": \"int32\"\n                                },\n                                \"layout\": {\n                                  \"properties\": {\n                                    \"orientation\": {\n                                      \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                                      \"description\": \"Detected orientation for the Layout.\",\n                                      \"type\": \"string\",\n                                      \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                                    },\n                                    \"boundingPoly\": {\n                                      \"type\": \"object\",\n                                      \"properties\": {\n                                        \"normalizedVertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon normalized vertices.\",\n                                          \"type\": \"array\"\n                                        },\n                                        \"vertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon vertices.\",\n                                          \"type\": \"array\"\n                                        }\n                                      },\n                                      \"description\": \"A bounding polygon for the detected image annotation.\"\n                                    },\n                                    \"textAnchor\": {\n                                      \"description\": \"Text reference indexing into the Document.text.\",\n                                      \"properties\": {\n                                        \"content\": {\n                                        },\n                                        \"textSegments\": {\n                                        }\n                                      },\n                                      \"type\": \"object\"\n                                    },\n                                    \"confidence\": {\n                                      \"type\": \"number\",\n                                      \"format\": \"float\",\n                                      \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                                    }\n                                  },\n                                  \"description\": \"Visual element describing a layout unit on a page.\",\n                                  \"type\": \"object\"\n                                }\n                              }\n                            },\n                            \"type\": \"array\",\n                            \"description\": \"Cells that make up this row.\"\n                          }\n                        }\n                      },\n                      \"description\": \"Header rows of the table.\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"bodyRows\": {\n                      \"type\": \"array\",\n                      \"description\": \"Body rows of the table.\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"description\": \"A row of table cells.\",\n                        \"properties\": {\n                          \"cells\": {\n                            \"items\": {\n                              \"description\": \"A cell representation inside the table.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"detectedLanguages\": {\n                                  \"items\": {\n                                    \"description\": \"Detected language for a structural component.\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"confidence\": {\n                                        \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                                        \"format\": \"float\",\n                                        \"type\": \"number\"\n                                      },\n                                      \"languageCode\": {\n                                        \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  },\n                                  \"description\": \"A list of detected languages together with confidence.\",\n                                  \"type\": \"array\"\n                                },\n                                \"rowSpan\": {\n                                  \"description\": \"How many rows this cell spans.\",\n                                  \"type\": \"integer\",\n                                  \"format\": \"int32\"\n                                },\n                                \"colSpan\": {\n                                  \"type\": \"integer\",\n                                  \"description\": \"How many columns this cell spans.\",\n                                  \"format\": \"int32\"\n                                },\n                                \"layout\": {\n                                  \"properties\": {\n                                    \"orientation\": {\n                                      \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                                      \"description\": \"Detected orientation for the Layout.\",\n                                      \"type\": \"string\",\n                                      \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                                    },\n                                    \"boundingPoly\": {\n                                      \"type\": \"object\",\n                                      \"properties\": {\n                                        \"normalizedVertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon normalized vertices.\",\n                                          \"type\": \"array\"\n                                        },\n                                        \"vertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon vertices.\",\n                                          \"type\": \"array\"\n                                        }\n                                      },\n                                      \"description\": \"A bounding polygon for the detected image annotation.\"\n                                    },\n                                    \"textAnchor\": {\n                                      \"description\": \"Text reference indexing into the Document.text.\",\n                                      \"properties\": {\n                                        \"content\": {\n                                        },\n                                        \"textSegments\": {\n                                        }\n                                      },\n                                      \"type\": \"object\"\n                                    },\n                                    \"confidence\": {\n                                      \"type\": \"number\",\n                                      \"format\": \"float\",\n                                      \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                                    }\n                                  },\n                                  \"description\": \"Visual element describing a layout unit on a page.\",\n                                  \"type\": \"object\"\n                                }\n                              }\n                            },\n                            \"type\": \"array\",\n                            \"description\": \"Cells that make up this row.\"\n                          }\n                        }\n                      }\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              },\n              \"formFields\": {\n                \"description\": \"A list of visually detected form fields on the page.\",\n                \"items\": {\n                  \"properties\": {\n                    \"correctedKeyText\": {\n                      \"description\": \"Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.\",\n                      \"type\": \"string\"\n                    },\n                    \"correctedValueText\": {\n                      \"description\": \"Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.\",\n                      \"type\": \"string\"\n                    },\n                    \"valueDetectedLanguages\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"description\": \"A list of detected languages for value together with confidence.\"\n                    },\n                    \"fieldValue\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"valueType\": {\n                      \"type\": \"string\",\n                      \"description\": \"If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"fieldName\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"nameDetectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages for name together with confidence.\"\n                    }\n                  },\n                  \"description\": \"A form field detected on the page.\",\n                  \"type\": \"object\"\n                },\n                \"type\": \"array\"\n              },\n              \"lines\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"properties\": {\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"description\": \"A list of detected languages together with confidence.\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"description\": \"A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.\",\n                  \"type\": \"object\"\n                },\n                \"description\": \"A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.\"\n              }\n            }\n          },\n          \"description\": \"Visual page layout for the Document.\"\n        },\n        \"textStyles\": {\n          \"items\": {\n            \"type\": \"object\",\n            \"description\": \"Annotation for common text style attributes. This adheres to CSS conventions as much as possible.\",\n            \"properties\": {\n              \"backgroundColor\": {\n                \"type\": \"object\",\n                \"description\": \"Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor\\u0027s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn\\u0027t carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha \\u003d protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red \\u003d (float) color.getRed(); float green \\u003d (float) color.getGreen(); float blue \\u003d (float) color.getBlue(); float denominator \\u003d 255.0; Color.Builder resultBuilder \\u003d Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha \\u003d color.getAlpha(); if (alpha !\\u003d 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red \\u003d [protocolor red]; float green \\u003d [protocolor green]; float blue \\u003d [protocolor blue]; FloatValue* alpha_wrapper \\u003d [protocolor alpha]; float alpha \\u003d 1.0; if (alpha_wrapper !\\u003d nil) { alpha \\u003d [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:\\u0026red green:\\u0026green blue:\\u0026blue alpha:\\u0026alpha]) { return nil; } Color* result \\u003d [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \\u003c\\u003d 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor \\u003d function(rgb_color) { var redFrac \\u003d rgb_color.red || 0.0; var greenFrac \\u003d rgb_color.green || 0.0; var blueFrac \\u003d rgb_color.blue || 0.0; var red \\u003d Math.floor(redFrac * 255); var green \\u003d Math.floor(greenFrac * 255); var blue \\u003d Math.floor(blueFrac * 255); if (!(\\u0027alpha\\u0027 in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac \\u003d rgb_color.alpha.value || 0.0; var rgbParams \\u003d [red, green, blue].join(\\u0027,\\u0027); return [\\u0027rgba(\\u0027, rgbParams, \\u0027,\\u0027, alphaFrac, \\u0027)\\u0027].join(\\u0027\\u0027); }; var rgbToCssColor \\u003d function(red, green, blue) { var rgbNumber \\u003d new Number((red \\u003c\\u003c 16) | (green \\u003c\\u003c 8) | blue); var hexString \\u003d rgbNumber.toString(16); var missingZeros \\u003d 6 - hexString.length; var resultBuilder \\u003d [\\u0027#\\u0027]; for (var i \\u003d 0; i \\u003c missingZeros; i++) { resultBuilder.push(\\u00270\\u0027); } resultBuilder.push(hexString); return resultBuilder.join(\\u0027\\u0027); }; // ...\",\n                \"properties\": {\n                  \"green\": {\n                    \"description\": \"The amount of green in the color as a value in the interval [0, 1].\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"alpha\": {\n                    \"description\": \"The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color \\u003d alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"red\": {\n                    \"type\": \"number\",\n                    \"description\": \"The amount of red in the color as a value in the interval [0, 1].\",\n                    \"format\": \"float\"\n                  },\n                  \"blue\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The amount of blue in the color as a value in the interval [0, 1].\"\n                  }\n                }\n              },\n              \"fontWeight\": {\n                \"type\": \"string\",\n                \"description\": \"Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp\"\n              },\n              \"fontSize\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"unit\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unit for the font size. Follows CSS naming (in, px, pt, etc.).\"\n                  },\n                  \"size\": {\n                    \"format\": \"float\",\n                    \"type\": \"number\",\n                    \"description\": \"Font size for the text.\"\n                  }\n                },\n                \"description\": \"Font size with unit.\"\n              },\n              \"textAnchor\": {\n                \"description\": \"Text reference indexing into the Document.text.\",\n                \"properties\": {\n                  \"content\": {\n                  },\n                  \"textSegments\": {\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"textDecoration\": {\n                \"description\": \"Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp\",\n                \"type\": \"string\"\n              },\n              \"color\": {\n                \"type\": \"object\",\n                \"description\": \"Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor\\u0027s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn\\u0027t carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha \\u003d protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red \\u003d (float) color.getRed(); float green \\u003d (float) color.getGreen(); float blue \\u003d (float) color.getBlue(); float denominator \\u003d 255.0; Color.Builder resultBuilder \\u003d Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha \\u003d color.getAlpha(); if (alpha !\\u003d 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red \\u003d [protocolor red]; float green \\u003d [protocolor green]; float blue \\u003d [protocolor blue]; FloatValue* alpha_wrapper \\u003d [protocolor alpha]; float alpha \\u003d 1.0; if (alpha_wrapper !\\u003d nil) { alpha \\u003d [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:\\u0026red green:\\u0026green blue:\\u0026blue alpha:\\u0026alpha]) { return nil; } Color* result \\u003d [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \\u003c\\u003d 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor \\u003d function(rgb_color) { var redFrac \\u003d rgb_color.red || 0.0; var greenFrac \\u003d rgb_color.green || 0.0; var blueFrac \\u003d rgb_color.blue || 0.0; var red \\u003d Math.floor(redFrac * 255); var green \\u003d Math.floor(greenFrac * 255); var blue \\u003d Math.floor(blueFrac * 255); if (!(\\u0027alpha\\u0027 in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac \\u003d rgb_color.alpha.value || 0.0; var rgbParams \\u003d [red, green, blue].join(\\u0027,\\u0027); return [\\u0027rgba(\\u0027, rgbParams, \\u0027,\\u0027, alphaFrac, \\u0027)\\u0027].join(\\u0027\\u0027); }; var rgbToCssColor \\u003d function(red, green, blue) { var rgbNumber \\u003d new Number((red \\u003c\\u003c 16) | (green \\u003c\\u003c 8) | blue); var hexString \\u003d rgbNumber.toString(16); var missingZeros \\u003d 6 - hexString.length; var resultBuilder \\u003d [\\u0027#\\u0027]; for (var i \\u003d 0; i \\u003c missingZeros; i++) { resultBuilder.push(\\u00270\\u0027); } resultBuilder.push(hexString); return resultBuilder.join(\\u0027\\u0027); }; // ...\",\n                \"properties\": {\n                  \"green\": {\n                    \"description\": \"The amount of green in the color as a value in the interval [0, 1].\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"alpha\": {\n                    \"description\": \"The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color \\u003d alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"red\": {\n                    \"type\": \"number\",\n                    \"description\": \"The amount of red in the color as a value in the interval [0, 1].\",\n                    \"format\": \"float\"\n                  },\n                  \"blue\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The amount of blue in the color as a value in the interval [0, 1].\"\n                  }\n                }\n              },\n              \"textStyle\": {\n                \"type\": \"string\",\n                \"description\": \"Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp\"\n              },\n              \"fontFamily\": {\n                \"type\": \"string\",\n                \"description\": \"Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp\"\n              }\n            }\n          },\n          \"description\": \"Styles for the Document.text.\",\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"rawDocument\": {\n      \"type\": \"object\",\n      \"description\": \"Payload message of raw document content (bytes).\",\n      \"properties\": {\n        \"mimeType\": {\n          \"type\": \"string\",\n          \"description\": \"An IANA MIME type (RFC6838) indicating the nature and format of the content.\"\n        },\n        \"content\": {\n          \"description\": \"Inline document content.\",\n          \"format\": \"byte\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"skipHumanReview\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether Human Review feature should be skipped for this request. Default to false.\"\n    },\n    \"fieldMask\": {\n      \"format\": \"google-fieldmask\",\n      \"description\": \"Specifies which fields to include in ProcessResponse\\u0027s document. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.\",\n      \"type\": \"string\"\n    }\n  }\n}"
  }, {
    "key": "`Task_15_response`",
    "dataType": "JSON_VALUE",
    "displayName": "`Task_15_response`",
    "isTransient": true,
    "producer": "1_15",
    "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"document\": {\n      \"description\": \"Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"revisions\": {\n          \"type\": \"array\",\n          \"description\": \"Placeholder. Revision history of this document.\",\n          \"items\": {\n            \"properties\": {\n              \"humanReview\": {\n                \"properties\": {\n                  \"state\": {\n                    \"description\": \"Human review state. e.g. `requested`, `succeeded`, `rejected`.\",\n                    \"type\": \"string\"\n                  },\n                  \"stateMessage\": {\n                    \"description\": \"A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"description\": \"Human Review information of the document.\",\n                \"type\": \"object\"\n              },\n              \"id\": {\n                \"description\": \"Id of the revision, internally generated by doc proto storage. Unique within the context of the document.\",\n                \"type\": \"string\"\n              },\n              \"processor\": {\n                \"description\": \"If the annotation was made by processor identify the processor by its resource name.\",\n                \"type\": \"string\"\n              },\n              \"parent\": {\n                \"type\": \"array\",\n                \"description\": \"The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"createTime\": {\n                \"type\": \"string\",\n                \"description\": \"The time that the revision was created, internally generated by doc proto storage at the time of create.\",\n                \"format\": \"google-datetime\"\n              },\n              \"agent\": {\n                \"type\": \"string\",\n                \"description\": \"If the change was made by a person specify the name or id of that person.\"\n              },\n              \"parentIds\": {\n                \"description\": \"The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            },\n            \"type\": \"object\",\n            \"description\": \"Contains past or forward revisions of this document.\"\n          }\n        },\n        \"shardInfo\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"textOffset\": {\n              \"format\": \"int64\",\n              \"type\": \"string\",\n              \"description\": \"The index of the first character in Document.text in the overall document global text.\"\n            },\n            \"shardIndex\": {\n              \"description\": \"The 0-based index of this shard.\",\n              \"format\": \"int64\",\n              \"type\": \"string\"\n            },\n            \"shardCount\": {\n              \"description\": \"Total number of shards.\",\n              \"type\": \"string\",\n              \"format\": \"int64\"\n            }\n          },\n          \"description\": \"For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.\"\n        },\n        \"entities\": {\n          \"description\": \"A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.\",\n          \"type\": \"array\",\n          \"items\": {\n            \"properties\": {\n              \"normalizedValue\": {\n                \"properties\": {\n                  \"addressValue\": {\n                  },\n                  \"text\": {\n                  },\n                  \"datetimeValue\": {\n                  },\n                  \"moneyValue\": {\n                  },\n                  \"floatValue\": {\n                  },\n                  \"booleanValue\": {\n                  },\n                  \"dateValue\": {\n                  },\n                  \"integerValue\": {\n                  }\n                },\n                \"description\": \"Parsed and normalized entity value.\",\n                \"type\": \"object\"\n              },\n              \"redacted\": {\n                \"type\": \"boolean\",\n                \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n              },\n              \"properties\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"properties\": {\n                    \"normalizedValue\": {\n                      \"properties\": {\n                        \"addressValue\": {\n                        },\n                        \"text\": {\n                        },\n                        \"datetimeValue\": {\n                        },\n                        \"moneyValue\": {\n                        },\n                        \"floatValue\": {\n                        },\n                        \"booleanValue\": {\n                        },\n                        \"dateValue\": {\n                        },\n                        \"integerValue\": {\n                        }\n                      },\n                      \"description\": \"Parsed and normalized entity value.\",\n                      \"type\": \"object\"\n                    },\n                    \"redacted\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                    },\n                    \"properties\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"properties\": {\n                          \"normalizedValue\": {\n                            \"properties\": {\n                              \"addressValue\": {\n                              },\n                              \"text\": {\n                              },\n                              \"datetimeValue\": {\n                              },\n                              \"moneyValue\": {\n                              },\n                              \"floatValue\": {\n                              },\n                              \"booleanValue\": {\n                              },\n                              \"dateValue\": {\n                              },\n                              \"integerValue\": {\n                              }\n                            },\n                            \"description\": \"Parsed and normalized entity value.\",\n                            \"type\": \"object\"\n                          },\n                          \"redacted\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                          },\n                          \"properties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"properties\": {\n                                \"normalizedValue\": {\n                                  \"properties\": {\n                                    \"addressValue\": {\n                                    },\n                                    \"text\": {\n                                    },\n                                    \"datetimeValue\": {\n                                    },\n                                    \"moneyValue\": {\n                                    },\n                                    \"floatValue\": {\n                                    },\n                                    \"booleanValue\": {\n                                    },\n                                    \"dateValue\": {\n                                    },\n                                    \"integerValue\": {\n                                    }\n                                  },\n                                  \"description\": \"Parsed and normalized entity value.\",\n                                  \"type\": \"object\"\n                                },\n                                \"redacted\": {\n                                  \"type\": \"boolean\",\n                                  \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                                },\n                                \"properties\": {\n                                  \"type\": \"array\",\n                                  \"items\": {\n                                    \"properties\": {\n                                      \"normalizedValue\": {\n                                        \"properties\": {\n                                          \"addressValue\": {\n                                          },\n                                          \"text\": {\n                                          },\n                                          \"datetimeValue\": {\n                                          },\n                                          \"moneyValue\": {\n                                          },\n                                          \"floatValue\": {\n                                          },\n                                          \"booleanValue\": {\n                                          },\n                                          \"dateValue\": {\n                                          },\n                                          \"integerValue\": {\n                                          }\n                                        },\n                                        \"description\": \"Parsed and normalized entity value.\",\n                                        \"type\": \"object\"\n                                      },\n                                      \"redacted\": {\n                                        \"type\": \"boolean\",\n                                        \"description\": \"Optional. Whether the entity will be redacted for de-identification purposes.\"\n                                      },\n                                      \"properties\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                          \"properties\": {\n                                          },\n                                          \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                                          \"type\": \"object\"\n                                        },\n                                        \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                                      },\n                                      \"textAnchor\": {\n                                        \"description\": \"Text reference indexing into the Document.text.\",\n                                        \"properties\": {\n                                          \"content\": {\n                                          },\n                                          \"textSegments\": {\n                                          }\n                                        },\n                                        \"type\": \"object\"\n                                      },\n                                      \"type\": {\n                                        \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                                        \"type\": \"string\"\n                                      },\n                                      \"provenance\": {\n                                        \"properties\": {\n                                          \"id\": {\n                                            \"format\": \"int32\",\n                                            \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                                            \"type\": \"integer\"\n                                          },\n                                          \"revision\": {\n                                          },\n                                          \"type\": {\n                                          },\n                                          \"parents\": {\n                                          }\n                                        },\n                                        \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                                        \"type\": \"object\"\n                                      },\n                                      \"pageAnchor\": {\n                                        \"properties\": {\n                                          \"pageRefs\": {\n                                          }\n                                        },\n                                        \"type\": \"object\",\n                                        \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                                      },\n                                      \"mentionText\": {\n                                        \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                                        \"type\": \"string\"\n                                      },\n                                      \"id\": {\n                                        \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                                        \"type\": \"string\"\n                                      },\n                                      \"mentionId\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                                      },\n                                      \"confidence\": {\n                                        \"type\": \"number\",\n                                        \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                                        \"format\": \"float\"\n                                      }\n                                    },\n                                    \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                                    \"type\": \"object\"\n                                  },\n                                  \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                                },\n                                \"textAnchor\": {\n                                  \"description\": \"Text reference indexing into the Document.text.\",\n                                  \"properties\": {\n                                    \"content\": {\n                                    },\n                                    \"textSegments\": {\n                                    }\n                                  },\n                                  \"type\": \"object\"\n                                },\n                                \"type\": {\n                                  \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                                  \"type\": \"string\"\n                                },\n                                \"provenance\": {\n                                  \"properties\": {\n                                    \"id\": {\n                                      \"format\": \"int32\",\n                                      \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                                      \"type\": \"integer\"\n                                    },\n                                    \"revision\": {\n                                    },\n                                    \"type\": {\n                                    },\n                                    \"parents\": {\n                                    }\n                                  },\n                                  \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                                  \"type\": \"object\"\n                                },\n                                \"pageAnchor\": {\n                                  \"properties\": {\n                                    \"pageRefs\": {\n                                    }\n                                  },\n                                  \"type\": \"object\",\n                                  \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                                },\n                                \"mentionText\": {\n                                  \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                                  \"type\": \"string\"\n                                },\n                                \"id\": {\n                                  \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                                  \"type\": \"string\"\n                                },\n                                \"mentionId\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                                },\n                                \"confidence\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                                  \"format\": \"float\"\n                                }\n                              },\n                              \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                              \"type\": \"object\"\n                            },\n                            \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                          },\n                          \"textAnchor\": {\n                            \"description\": \"Text reference indexing into the Document.text.\",\n                            \"properties\": {\n                              \"content\": {\n                              },\n                              \"textSegments\": {\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": {\n                            \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                            \"type\": \"string\"\n                          },\n                          \"provenance\": {\n                            \"properties\": {\n                              \"id\": {\n                                \"format\": \"int32\",\n                                \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                                \"type\": \"integer\"\n                              },\n                              \"revision\": {\n                              },\n                              \"type\": {\n                              },\n                              \"parents\": {\n                              }\n                            },\n                            \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                            \"type\": \"object\"\n                          },\n                          \"pageAnchor\": {\n                            \"properties\": {\n                              \"pageRefs\": {\n                              }\n                            },\n                            \"type\": \"object\",\n                            \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                          },\n                          \"mentionText\": {\n                            \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                            \"type\": \"string\"\n                          },\n                          \"id\": {\n                            \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                            \"type\": \"string\"\n                          },\n                          \"mentionId\": {\n                            \"type\": \"string\",\n                            \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                          },\n                          \"confidence\": {\n                            \"type\": \"number\",\n                            \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                            \"format\": \"float\"\n                          }\n                        },\n                        \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                        \"type\": \"object\"\n                      },\n                      \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n                    },\n                    \"textAnchor\": {\n                      \"description\": \"Text reference indexing into the Document.text.\",\n                      \"properties\": {\n                        \"content\": {\n                        },\n                        \"textSegments\": {\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": {\n                      \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                      \"type\": \"string\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"pageAnchor\": {\n                      \"properties\": {\n                        \"pageRefs\": {\n                        }\n                      },\n                      \"type\": \"object\",\n                      \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n                    },\n                    \"mentionText\": {\n                      \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                      \"type\": \"string\"\n                    },\n                    \"mentionId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n                    },\n                    \"confidence\": {\n                      \"type\": \"number\",\n                      \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                      \"format\": \"float\"\n                    }\n                  },\n                  \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n                  \"type\": \"object\"\n                },\n                \"description\": \"Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.\"\n              },\n              \"textAnchor\": {\n                \"description\": \"Text reference indexing into the Document.text.\",\n                \"properties\": {\n                  \"content\": {\n                  },\n                  \"textSegments\": {\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"type\": {\n                \"description\": \"Required. Entity type from a schema e.g. `Address`.\",\n                \"type\": \"string\"\n              },\n              \"provenance\": {\n                \"properties\": {\n                  \"id\": {\n                    \"format\": \"int32\",\n                    \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                    \"type\": \"integer\"\n                  },\n                  \"revision\": {\n                  },\n                  \"type\": {\n                  },\n                  \"parents\": {\n                  }\n                },\n                \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                \"type\": \"object\"\n              },\n              \"pageAnchor\": {\n                \"properties\": {\n                  \"pageRefs\": {\n                  }\n                },\n                \"type\": \"object\",\n                \"description\": \"Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.\"\n              },\n              \"mentionText\": {\n                \"description\": \"Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.\",\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"description\": \"Optional. Canonical id. This will be a unique value in the entity list for this document.\",\n                \"type\": \"string\"\n              },\n              \"mentionId\": {\n                \"type\": \"string\",\n                \"description\": \"Optional. Deprecated. Use `id` field instead.\"\n              },\n              \"confidence\": {\n                \"type\": \"number\",\n                \"description\": \"Optional. Confidence of detected Schema entity. Range `[0, 1]`.\",\n                \"format\": \"float\"\n              }\n            },\n            \"description\": \"An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.\",\n            \"type\": \"object\"\n          }\n        },\n        \"mimeType\": {\n          \"description\": \"An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.\",\n          \"type\": \"string\"\n        },\n        \"entityRelations\": {\n          \"type\": \"array\",\n          \"description\": \"Placeholder. Relationship among Document.entities.\",\n          \"items\": {\n            \"description\": \"Relationship between Entities.\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"relation\": {\n                \"description\": \"Relationship description.\",\n                \"type\": \"string\"\n              },\n              \"subjectId\": {\n                \"description\": \"Subject entity id.\",\n                \"type\": \"string\"\n              },\n              \"objectId\": {\n                \"description\": \"Object entity id.\",\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"content\": {\n          \"description\": \"Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.\",\n          \"format\": \"byte\",\n          \"type\": \"string\"\n        },\n        \"error\": {\n          \"type\": \"object\",\n          \"description\": \"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).\",\n          \"properties\": {\n            \"message\": {\n              \"description\": \"A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.\",\n              \"type\": \"string\"\n            },\n            \"code\": {\n              \"type\": \"integer\",\n              \"description\": \"The status code, which should be an enum value of google.rpc.Code.\",\n              \"format\": \"int32\"\n            },\n            \"details\": {\n              \"items\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"any\",\n                  \"description\": \"Properties of the object. Contains field @type with type URL.\"\n                }\n              },\n              \"type\": \"array\",\n              \"description\": \"A list of messages that carry the error details. There is a common set of message types for APIs to use.\"\n            }\n          }\n        },\n        \"text\": {\n          \"type\": \"string\",\n          \"description\": \"Optional. UTF-8 encoded text in reading order from the document.\"\n        },\n        \"uri\": {\n          \"description\": \"Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.\",\n          \"type\": \"string\"\n        },\n        \"textChanges\": {\n          \"items\": {\n            \"properties\": {\n              \"changedText\": {\n                \"type\": \"string\",\n                \"description\": \"The text that replaces the text identified in the `text_anchor`.\"\n              },\n              \"provenance\": {\n                \"items\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"format\": \"int32\",\n                      \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                      \"type\": \"integer\"\n                    },\n                    \"revision\": {\n                    },\n                    \"type\": {\n                    },\n                    \"parents\": {\n                    }\n                  },\n                  \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                  \"type\": \"object\"\n                },\n                \"type\": \"array\",\n                \"description\": \"The history of this annotation.\"\n              },\n              \"textAnchor\": {\n                \"description\": \"Text reference indexing into the Document.text.\",\n                \"properties\": {\n                  \"content\": {\n                  },\n                  \"textSegments\": {\n                  }\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"type\": \"object\",\n            \"description\": \"This message is used for text changes aka. OCR corrections.\"\n          },\n          \"description\": \"Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.\",\n          \"type\": \"array\"\n        },\n        \"pages\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"description\": \"A page in a Document.\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"detectedBarcodes\": {\n                \"items\": {\n                  \"properties\": {\n                    \"barcode\": {\n                      \"properties\": {\n                        \"format\": {\n                          \"type\": \"string\",\n                          \"description\": \"Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.\"\n                        },\n                        \"rawValue\": {\n                          \"type\": \"string\",\n                          \"description\": \"Raw value encoded in the barcode. For example: `\\u0027MEBKM:TITLE:Google;URL:https://www.google.com;;\\u0027`.\"\n                        },\n                        \"valueFormat\": {\n                          \"description\": \"Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver\\u0027s license.\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"description\": \"Encodes the detailed information of a barcode.\",\n                      \"type\": \"object\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                                \"properties\": {\n                                  \"y\": {\n                                    \"format\": \"float\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\",\n                                    \"type\": \"number\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"number\",\n                                    \"format\": \"float\",\n                                    \"description\": \"X coordinate.\"\n                                  }\n                                },\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.\",\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.\",\n                                \"properties\": {\n                                  \"y\": {\n                                    \"type\": \"integer\",\n                                    \"format\": \"int32\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"X coordinate.\",\n                                    \"format\": \"int32\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"description\": \"A detected barcode.\"\n                },\n                \"type\": \"array\",\n                \"description\": \"A list of detected barcodes.\"\n              },\n              \"visualElements\": {\n                \"description\": \"A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"description\": \"Detected non-text visual elements e.g. checkbox, signature etc. on the page.\",\n                  \"properties\": {\n                    \"detectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"Type of the VisualElement.\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                                \"properties\": {\n                                  \"y\": {\n                                    \"format\": \"float\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\",\n                                    \"type\": \"number\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"number\",\n                                    \"format\": \"float\",\n                                    \"description\": \"X coordinate.\"\n                                  }\n                                },\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.\",\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                                \"description\": \"A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.\",\n                                \"properties\": {\n                                  \"y\": {\n                                    \"type\": \"integer\",\n                                    \"format\": \"int32\",\n                                    \"description\": \"Y coordinate (starts from the top of the image).\"\n                                  },\n                                  \"x\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"X coordinate.\",\n                                    \"format\": \"int32\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              },\n              \"imageQualityScores\": {\n                \"description\": \"Image Quality Scores for the page image\",\n                \"properties\": {\n                  \"qualityScore\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The overall quality score. Range `[0, 1]` where 1 is perfect quality.\"\n                  },\n                  \"detectedDefects\": {\n                    \"items\": {\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"description\": \"Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists.\"\n                        }\n                      },\n                      \"type\": \"object\",\n                      \"description\": \"Image Quality Defects\"\n                    },\n                    \"description\": \"A list of detected defects.\",\n                    \"type\": \"array\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"pageNumber\": {\n                \"format\": \"int32\",\n                \"description\": \"1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.\",\n                \"type\": \"integer\"\n              },\n              \"layout\": {\n                \"properties\": {\n                  \"orientation\": {\n                    \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                    \"description\": \"Detected orientation for the Layout.\",\n                    \"type\": \"string\",\n                    \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                  },\n                  \"boundingPoly\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"normalizedVertices\": {\n                        \"items\": {\n                          \"properties\": {\n                            \"y\": {\n                              \"format\": \"float\",\n                              \"description\": \"Y coordinate (starts from the top of the image).\",\n                              \"type\": \"number\"\n                            },\n                            \"x\": {\n                              \"type\": \"number\",\n                              \"format\": \"float\",\n                              \"description\": \"X coordinate.\"\n                            }\n                          },\n                          \"description\": \"A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.\",\n                          \"type\": \"object\"\n                        },\n                        \"description\": \"The bounding polygon normalized vertices.\",\n                        \"type\": \"array\"\n                      },\n                      \"vertices\": {\n                        \"items\": {\n                          \"description\": \"A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.\",\n                          \"properties\": {\n                            \"y\": {\n                              \"type\": \"integer\",\n                              \"format\": \"int32\",\n                              \"description\": \"Y coordinate (starts from the top of the image).\"\n                            },\n                            \"x\": {\n                              \"type\": \"integer\",\n                              \"description\": \"X coordinate.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"description\": \"The bounding polygon vertices.\",\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"description\": \"A bounding polygon for the detected image annotation.\"\n                  },\n                  \"textAnchor\": {\n                    \"description\": \"Text reference indexing into the Document.text.\",\n                    \"properties\": {\n                      \"content\": {\n                      },\n                      \"textSegments\": {\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"confidence\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                  }\n                },\n                \"description\": \"Visual element describing a layout unit on a page.\",\n                \"type\": \"object\"\n              },\n              \"symbols\": {\n                \"items\": {\n                  \"properties\": {\n                    \"detectedLanguages\": {\n                      \"description\": \"A list of detected languages together with confidence.\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"description\": \"A detected symbol.\"\n                },\n                \"description\": \"A list of visually detected symbols on the page.\",\n                \"type\": \"array\"\n              },\n              \"tokens\": {\n                \"description\": \"A list of visually detected tokens on the page.\",\n                \"items\": {\n                  \"description\": \"A detected token.\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detectedBreak\": {\n                      \"description\": \"Detected break at the end of a Token.\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\"TYPE_UNSPECIFIED\", \"SPACE\", \"WIDE_SPACE\", \"HYPHEN\"],\n                          \"description\": \"Detected break type.\",\n                          \"enumDescriptions\": [\"Unspecified break type.\", \"A single whitespace.\", \"A wider whitespace.\", \"A hyphen that indicates that a token has been split across lines.\"]\n                        }\n                      }\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  }\n                },\n                \"type\": \"array\"\n              },\n              \"detectedLanguages\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"description\": \"Detected language for a structural component.\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"confidence\": {\n                      \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                      \"format\": \"float\",\n                      \"type\": \"number\"\n                    },\n                    \"languageCode\": {\n                      \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"description\": \"A list of detected languages together with confidence.\"\n              },\n              \"blocks\": {\n                \"items\": {\n                  \"properties\": {\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"description\": \"A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.\",\n                  \"type\": \"object\"\n                },\n                \"description\": \"A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.\",\n                \"type\": \"array\"\n              },\n              \"paragraphs\": {\n                \"description\": \"A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"description\": \"A collection of lines that a human would perceive as a paragraph.\",\n                  \"properties\": {\n                    \"detectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              },\n              \"transforms\": {\n                \"type\": \"array\",\n                \"description\": \"Transformation matrices that were applied to the original document image to produce Page.image.\",\n                \"items\": {\n                  \"description\": \"Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"string\",\n                      \"format\": \"byte\",\n                      \"description\": \"The matrix data.\"\n                    },\n                    \"type\": {\n                      \"description\": \"This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html\",\n                      \"format\": \"int32\",\n                      \"type\": \"integer\"\n                    },\n                    \"rows\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Number of rows in the matrix.\",\n                      \"format\": \"int32\"\n                    },\n                    \"cols\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\",\n                      \"description\": \"Number of columns in the matrix.\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              },\n              \"dimension\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"unit\": {\n                    \"description\": \"Dimension unit.\",\n                    \"type\": \"string\"\n                  },\n                  \"height\": {\n                    \"description\": \"Page height.\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"width\": {\n                    \"description\": \"Page width.\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  }\n                },\n                \"description\": \"Dimension for the page.\"\n              },\n              \"provenance\": {\n                \"properties\": {\n                  \"id\": {\n                    \"format\": \"int32\",\n                    \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                    \"type\": \"integer\"\n                  },\n                  \"revision\": {\n                  },\n                  \"type\": {\n                  },\n                  \"parents\": {\n                  }\n                },\n                \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                \"type\": \"object\"\n              },\n              \"image\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"content\": {\n                    \"description\": \"Raw byte content of the image.\",\n                    \"format\": \"byte\",\n                    \"type\": \"string\"\n                  },\n                  \"mimeType\": {\n                    \"type\": \"string\",\n                    \"description\": \"Encoding mime type for the image.\"\n                  },\n                  \"width\": {\n                    \"description\": \"Width of the image in pixels.\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                  },\n                  \"height\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Height of the image in pixels.\",\n                    \"format\": \"int32\"\n                  }\n                },\n                \"description\": \"Rendered image contents for this page.\"\n              },\n              \"tables\": {\n                \"description\": \"A list of visually detected tables on the page.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"description\": \"A table representation similar to HTML table structure.\",\n                  \"properties\": {\n                    \"headerRows\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"description\": \"A row of table cells.\",\n                        \"properties\": {\n                          \"cells\": {\n                            \"items\": {\n                              \"description\": \"A cell representation inside the table.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"detectedLanguages\": {\n                                  \"items\": {\n                                    \"description\": \"Detected language for a structural component.\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"confidence\": {\n                                        \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                                        \"format\": \"float\",\n                                        \"type\": \"number\"\n                                      },\n                                      \"languageCode\": {\n                                        \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  },\n                                  \"description\": \"A list of detected languages together with confidence.\",\n                                  \"type\": \"array\"\n                                },\n                                \"rowSpan\": {\n                                  \"description\": \"How many rows this cell spans.\",\n                                  \"type\": \"integer\",\n                                  \"format\": \"int32\"\n                                },\n                                \"colSpan\": {\n                                  \"type\": \"integer\",\n                                  \"description\": \"How many columns this cell spans.\",\n                                  \"format\": \"int32\"\n                                },\n                                \"layout\": {\n                                  \"properties\": {\n                                    \"orientation\": {\n                                      \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                                      \"description\": \"Detected orientation for the Layout.\",\n                                      \"type\": \"string\",\n                                      \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                                    },\n                                    \"boundingPoly\": {\n                                      \"type\": \"object\",\n                                      \"properties\": {\n                                        \"normalizedVertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon normalized vertices.\",\n                                          \"type\": \"array\"\n                                        },\n                                        \"vertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon vertices.\",\n                                          \"type\": \"array\"\n                                        }\n                                      },\n                                      \"description\": \"A bounding polygon for the detected image annotation.\"\n                                    },\n                                    \"textAnchor\": {\n                                      \"description\": \"Text reference indexing into the Document.text.\",\n                                      \"properties\": {\n                                        \"content\": {\n                                        },\n                                        \"textSegments\": {\n                                        }\n                                      },\n                                      \"type\": \"object\"\n                                    },\n                                    \"confidence\": {\n                                      \"type\": \"number\",\n                                      \"format\": \"float\",\n                                      \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                                    }\n                                  },\n                                  \"description\": \"Visual element describing a layout unit on a page.\",\n                                  \"type\": \"object\"\n                                }\n                              }\n                            },\n                            \"type\": \"array\",\n                            \"description\": \"Cells that make up this row.\"\n                          }\n                        }\n                      },\n                      \"description\": \"Header rows of the table.\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"description\": \"A list of detected languages together with confidence.\"\n                    },\n                    \"bodyRows\": {\n                      \"type\": \"array\",\n                      \"description\": \"Body rows of the table.\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"description\": \"A row of table cells.\",\n                        \"properties\": {\n                          \"cells\": {\n                            \"items\": {\n                              \"description\": \"A cell representation inside the table.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"detectedLanguages\": {\n                                  \"items\": {\n                                    \"description\": \"Detected language for a structural component.\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"confidence\": {\n                                        \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                                        \"format\": \"float\",\n                                        \"type\": \"number\"\n                                      },\n                                      \"languageCode\": {\n                                        \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  },\n                                  \"description\": \"A list of detected languages together with confidence.\",\n                                  \"type\": \"array\"\n                                },\n                                \"rowSpan\": {\n                                  \"description\": \"How many rows this cell spans.\",\n                                  \"type\": \"integer\",\n                                  \"format\": \"int32\"\n                                },\n                                \"colSpan\": {\n                                  \"type\": \"integer\",\n                                  \"description\": \"How many columns this cell spans.\",\n                                  \"format\": \"int32\"\n                                },\n                                \"layout\": {\n                                  \"properties\": {\n                                    \"orientation\": {\n                                      \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                                      \"description\": \"Detected orientation for the Layout.\",\n                                      \"type\": \"string\",\n                                      \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                                    },\n                                    \"boundingPoly\": {\n                                      \"type\": \"object\",\n                                      \"properties\": {\n                                        \"normalizedVertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon normalized vertices.\",\n                                          \"type\": \"array\"\n                                        },\n                                        \"vertices\": {\n                                          \"items\": {\n                                          },\n                                          \"description\": \"The bounding polygon vertices.\",\n                                          \"type\": \"array\"\n                                        }\n                                      },\n                                      \"description\": \"A bounding polygon for the detected image annotation.\"\n                                    },\n                                    \"textAnchor\": {\n                                      \"description\": \"Text reference indexing into the Document.text.\",\n                                      \"properties\": {\n                                        \"content\": {\n                                        },\n                                        \"textSegments\": {\n                                        }\n                                      },\n                                      \"type\": \"object\"\n                                    },\n                                    \"confidence\": {\n                                      \"type\": \"number\",\n                                      \"format\": \"float\",\n                                      \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                                    }\n                                  },\n                                  \"description\": \"Visual element describing a layout unit on a page.\",\n                                  \"type\": \"object\"\n                                }\n                              }\n                            },\n                            \"type\": \"array\",\n                            \"description\": \"Cells that make up this row.\"\n                          }\n                        }\n                      }\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              },\n              \"formFields\": {\n                \"description\": \"A list of visually detected form fields on the page.\",\n                \"items\": {\n                  \"properties\": {\n                    \"correctedKeyText\": {\n                      \"description\": \"Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.\",\n                      \"type\": \"string\"\n                    },\n                    \"correctedValueText\": {\n                      \"description\": \"Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.\",\n                      \"type\": \"string\"\n                    },\n                    \"valueDetectedLanguages\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"description\": \"A list of detected languages for value together with confidence.\"\n                    },\n                    \"fieldValue\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"valueType\": {\n                      \"type\": \"string\",\n                      \"description\": \"If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`\"\n                    },\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"fieldName\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"nameDetectedLanguages\": {\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\",\n                      \"description\": \"A list of detected languages for name together with confidence.\"\n                    }\n                  },\n                  \"description\": \"A form field detected on the page.\",\n                  \"type\": \"object\"\n                },\n                \"type\": \"array\"\n              },\n              \"lines\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"properties\": {\n                    \"provenance\": {\n                      \"properties\": {\n                        \"id\": {\n                          \"format\": \"int32\",\n                          \"description\": \"The Id of this operation. Needs to be unique within the scope of the revision.\",\n                          \"type\": \"integer\"\n                        },\n                        \"revision\": {\n                        },\n                        \"type\": {\n                        },\n                        \"parents\": {\n                        }\n                      },\n                      \"description\": \"Structure to identify provenance relationships between annotations in different revisions.\",\n                      \"type\": \"object\"\n                    },\n                    \"layout\": {\n                      \"properties\": {\n                        \"orientation\": {\n                          \"enum\": [\"ORIENTATION_UNSPECIFIED\", \"PAGE_UP\", \"PAGE_RIGHT\", \"PAGE_DOWN\", \"PAGE_LEFT\"],\n                          \"description\": \"Detected orientation for the Layout.\",\n                          \"type\": \"string\",\n                          \"enumDescriptions\": [\"Unspecified orientation.\", \"Orientation is aligned with page up.\", \"Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.\", \"Orientation is aligned with page down. Turn the head 180 degrees from upright to read.\", \"Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read.\"]\n                        },\n                        \"boundingPoly\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"normalizedVertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon normalized vertices.\",\n                              \"type\": \"array\"\n                            },\n                            \"vertices\": {\n                              \"items\": {\n                              },\n                              \"description\": \"The bounding polygon vertices.\",\n                              \"type\": \"array\"\n                            }\n                          },\n                          \"description\": \"A bounding polygon for the detected image annotation.\"\n                        },\n                        \"textAnchor\": {\n                          \"description\": \"Text reference indexing into the Document.text.\",\n                          \"properties\": {\n                            \"content\": {\n                            },\n                            \"textSegments\": {\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"confidence\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"description\": \"Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.\"\n                        }\n                      },\n                      \"description\": \"Visual element describing a layout unit on a page.\",\n                      \"type\": \"object\"\n                    },\n                    \"detectedLanguages\": {\n                      \"description\": \"A list of detected languages together with confidence.\",\n                      \"items\": {\n                        \"description\": \"Detected language for a structural component.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"confidence\": {\n                            \"description\": \"Confidence of detected language. Range `[0, 1]`.\",\n                            \"format\": \"float\",\n                            \"type\": \"number\"\n                          },\n                          \"languageCode\": {\n                            \"description\": \"The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\",\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"description\": \"A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.\",\n                  \"type\": \"object\"\n                },\n                \"description\": \"A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.\"\n              }\n            }\n          },\n          \"description\": \"Visual page layout for the Document.\"\n        },\n        \"textStyles\": {\n          \"items\": {\n            \"type\": \"object\",\n            \"description\": \"Annotation for common text style attributes. This adheres to CSS conventions as much as possible.\",\n            \"properties\": {\n              \"backgroundColor\": {\n                \"type\": \"object\",\n                \"description\": \"Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor\\u0027s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn\\u0027t carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha \\u003d protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red \\u003d (float) color.getRed(); float green \\u003d (float) color.getGreen(); float blue \\u003d (float) color.getBlue(); float denominator \\u003d 255.0; Color.Builder resultBuilder \\u003d Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha \\u003d color.getAlpha(); if (alpha !\\u003d 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red \\u003d [protocolor red]; float green \\u003d [protocolor green]; float blue \\u003d [protocolor blue]; FloatValue* alpha_wrapper \\u003d [protocolor alpha]; float alpha \\u003d 1.0; if (alpha_wrapper !\\u003d nil) { alpha \\u003d [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:\\u0026red green:\\u0026green blue:\\u0026blue alpha:\\u0026alpha]) { return nil; } Color* result \\u003d [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \\u003c\\u003d 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor \\u003d function(rgb_color) { var redFrac \\u003d rgb_color.red || 0.0; var greenFrac \\u003d rgb_color.green || 0.0; var blueFrac \\u003d rgb_color.blue || 0.0; var red \\u003d Math.floor(redFrac * 255); var green \\u003d Math.floor(greenFrac * 255); var blue \\u003d Math.floor(blueFrac * 255); if (!(\\u0027alpha\\u0027 in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac \\u003d rgb_color.alpha.value || 0.0; var rgbParams \\u003d [red, green, blue].join(\\u0027,\\u0027); return [\\u0027rgba(\\u0027, rgbParams, \\u0027,\\u0027, alphaFrac, \\u0027)\\u0027].join(\\u0027\\u0027); }; var rgbToCssColor \\u003d function(red, green, blue) { var rgbNumber \\u003d new Number((red \\u003c\\u003c 16) | (green \\u003c\\u003c 8) | blue); var hexString \\u003d rgbNumber.toString(16); var missingZeros \\u003d 6 - hexString.length; var resultBuilder \\u003d [\\u0027#\\u0027]; for (var i \\u003d 0; i \\u003c missingZeros; i++) { resultBuilder.push(\\u00270\\u0027); } resultBuilder.push(hexString); return resultBuilder.join(\\u0027\\u0027); }; // ...\",\n                \"properties\": {\n                  \"green\": {\n                    \"description\": \"The amount of green in the color as a value in the interval [0, 1].\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"alpha\": {\n                    \"description\": \"The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color \\u003d alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"red\": {\n                    \"type\": \"number\",\n                    \"description\": \"The amount of red in the color as a value in the interval [0, 1].\",\n                    \"format\": \"float\"\n                  },\n                  \"blue\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The amount of blue in the color as a value in the interval [0, 1].\"\n                  }\n                }\n              },\n              \"fontWeight\": {\n                \"type\": \"string\",\n                \"description\": \"Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp\"\n              },\n              \"fontSize\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"unit\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unit for the font size. Follows CSS naming (in, px, pt, etc.).\"\n                  },\n                  \"size\": {\n                    \"format\": \"float\",\n                    \"type\": \"number\",\n                    \"description\": \"Font size for the text.\"\n                  }\n                },\n                \"description\": \"Font size with unit.\"\n              },\n              \"textAnchor\": {\n                \"description\": \"Text reference indexing into the Document.text.\",\n                \"properties\": {\n                  \"content\": {\n                  },\n                  \"textSegments\": {\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"textDecoration\": {\n                \"description\": \"Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp\",\n                \"type\": \"string\"\n              },\n              \"color\": {\n                \"type\": \"object\",\n                \"description\": \"Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor\\u0027s `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn\\u0027t carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha \\u003d protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red \\u003d (float) color.getRed(); float green \\u003d (float) color.getGreen(); float blue \\u003d (float) color.getBlue(); float denominator \\u003d 255.0; Color.Builder resultBuilder \\u003d Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha \\u003d color.getAlpha(); if (alpha !\\u003d 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red \\u003d [protocolor red]; float green \\u003d [protocolor green]; float blue \\u003d [protocolor blue]; FloatValue* alpha_wrapper \\u003d [protocolor alpha]; float alpha \\u003d 1.0; if (alpha_wrapper !\\u003d nil) { alpha \\u003d [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:\\u0026red green:\\u0026green blue:\\u0026blue alpha:\\u0026alpha]) { return nil; } Color* result \\u003d [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \\u003c\\u003d 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor \\u003d function(rgb_color) { var redFrac \\u003d rgb_color.red || 0.0; var greenFrac \\u003d rgb_color.green || 0.0; var blueFrac \\u003d rgb_color.blue || 0.0; var red \\u003d Math.floor(redFrac * 255); var green \\u003d Math.floor(greenFrac * 255); var blue \\u003d Math.floor(blueFrac * 255); if (!(\\u0027alpha\\u0027 in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac \\u003d rgb_color.alpha.value || 0.0; var rgbParams \\u003d [red, green, blue].join(\\u0027,\\u0027); return [\\u0027rgba(\\u0027, rgbParams, \\u0027,\\u0027, alphaFrac, \\u0027)\\u0027].join(\\u0027\\u0027); }; var rgbToCssColor \\u003d function(red, green, blue) { var rgbNumber \\u003d new Number((red \\u003c\\u003c 16) | (green \\u003c\\u003c 8) | blue); var hexString \\u003d rgbNumber.toString(16); var missingZeros \\u003d 6 - hexString.length; var resultBuilder \\u003d [\\u0027#\\u0027]; for (var i \\u003d 0; i \\u003c missingZeros; i++) { resultBuilder.push(\\u00270\\u0027); } resultBuilder.push(hexString); return resultBuilder.join(\\u0027\\u0027); }; // ...\",\n                \"properties\": {\n                  \"green\": {\n                    \"description\": \"The amount of green in the color as a value in the interval [0, 1].\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"alpha\": {\n                    \"description\": \"The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color \\u003d alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).\",\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  },\n                  \"red\": {\n                    \"type\": \"number\",\n                    \"description\": \"The amount of red in the color as a value in the interval [0, 1].\",\n                    \"format\": \"float\"\n                  },\n                  \"blue\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The amount of blue in the color as a value in the interval [0, 1].\"\n                  }\n                }\n              },\n              \"textStyle\": {\n                \"type\": \"string\",\n                \"description\": \"Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp\"\n              },\n              \"fontFamily\": {\n                \"type\": \"string\",\n                \"description\": \"Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp\"\n              }\n            }\n          },\n          \"description\": \"Styles for the Document.text.\",\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"humanReviewStatus\": {\n      \"description\": \"The status of human review on a processed document.\",\n      \"properties\": {\n        \"humanReviewOperation\": {\n          \"description\": \"The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method.\",\n          \"type\": \"string\"\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"enum\": [\"STATE_UNSPECIFIED\", \"SKIPPED\", \"VALIDATION_PASSED\", \"IN_PROGRESS\", \"ERROR\"],\n          \"description\": \"The state of human review on the processing request.\",\n          \"enumDescriptions\": [\"Human review state is unspecified. Most likely due to an internal error.\", \"Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.\", \"Human review validation is triggered and passed, so no review is needed.\", \"Human review validation is triggered and the document is under review.\", \"Some error happened during triggering human review, see the [state_message] for details.\"]\n        },\n        \"stateMessage\": {\n          \"type\": \"string\",\n          \"description\": \"A message providing more details about the human review state.\"\n        }\n      },\n      \"type\": \"object\"\n    }\n  }\n}"
  }]
}